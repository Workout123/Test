All Api

----------------------------------------

https://docs.angularjs.org/api

controllers
------------------------------------------

http://www.undefinednull.com/2014/07/07/practical-guide-to-prelink-postlink-and-controller-methods-of-angular-directives/

http://www.dotnet-tricks.com/Tutorial/angularjs/HM0L291214-Understanding-$emit,-$broadcast-and-$on-in-AngularJS.html

scope
-------------------------------------------

https://github.com/angular/angular.js/wiki/Understanding-Scopes

https://docs.angularjs.org/guide/scope


views
------------------------------------------
https://github.com/angular-ui/ui-router/wiki/Nested-States-and-Nested-Views

https://github.com/angular-ui/ui-router/wiki/Multiple-Named-Views

Communication between directives
-----------------------------------------
http://blog.dudak.me/2014/angular-js-directive-communication-guide-part-1/

http://blog.dudak.me/2014/angular-js-directive-communication-guide-part-2/


Restangular
-------------------------------------------

https://github.com/mgonto/restangular


states

-------------------------------------------

https://github.com/angular-ui/ui-router/wiki


Promises
------------------------------------------
http://markdalgleish.com/2013/06/using-promises-in-angularjs-views/

http://www.dwmkerr.com/promises-in-angularjs-the-definitive-guide/



Others
-------


http://viralpatel.net/blogs/category/javascript/angularjs/

https://scotch.io/tutorials/single-page-apps-with-angularjs-routing-and-templating     -------> Single Page Application	

http://www.funnyant.com/angularjs-ui-router/

https://github.com/angular/angular.js/wiki/Understanding-Scopes         ----------> Understanding Scopes

http://www.undefinednull.com/2014/02/11/mastering-the-scope-of-a-directive-in-angularjs/   ---------> Directive Scope

https://github.com/mgonto/restangular   ----------> To Understanding restangular









-----------------------------------------------------
=====================================================
AngularJS 
Spa -single page application

Directives:
ng-app
	data-ng-app=""

ng-model="name"
	{{name	}}		

ng-init="names=[,,,]"
ng-repeat="name in names"
	{{name}}

ng-coontroller
ng-click="fun()"
ng-view =

FIlters"
	ng-model="cust in customers | filter:name | orderBy:'city'"
	{{cust.name | uppercase}}
---------------------------

Viev-----{scope /ViewModel} --------controller

Module -->config--->routes------>View      ---->Directives
							|--->Controller --->Factories	


angular.module("demoApp",['helperModule']);													
----------------------------
ng-app="demoApp"
ng-controller="simpleCtrl"
1

	<script>
		function simpleCtrl($scope){$scope.customer=[{},..]}	

2
	var demoApp = angular.module("demoApp",['helperModule']);
	demoApp.controller("simpleCtrl",function($scope){});

3	
	controller={  } //obj contain controller functions
 	demoApp.controller(controllers);
-----------------------------------
Routes
	var demoApp = angular.module("demoApp",[]);

	demoApp.config(function($routeProvider){
		$routeProvider
			.when("/",
				{
					controller: 'SimpleController',
					templateURL: 'View.html'
				})
			.when("/partial2:idparam",  ///$routeParams.idparam
				{
					/..
				})
			.otherwise({redirect:"/"});		
			
	});
-----------------

Factories (also Service-Provider)
	var demoApp = angular.module("demoApp",[])
	.config()
	.factory('SimpleFactory',function(){
		var factory ={};
		var customers =[....]
		factory.getCustomers = function(){
			return customers;
		}
		return factory;
	})
	.controller("SimpleController",function($scope,Simplefactory){
		$scope.customers = Simplefactory.getCustomers()''
	});

Service
	insteaf of factory obj,use this 	

--------------------------------------------

fILTERS
app.filters("reverse"function(data){
	return function(text){
		return text.split("").reverse().join("");data.message();
	}
})

CUSTOM dIRECTIVES

app.directive("superman",function({
	return {
		restrict : "E",   //E-element A-attr M -comment C-class
		template : "<div>"Son of Krypton"</div>"
	}	
}))

app.directive("super",function(){
	return {
		restrict : "A", //deffault
		link : function(){

		}
	}
})

class= "super"
app.directive("superClass",function(){
	return {
		restrict : "C",
		link : function(){

		}
	}
})

---------
BEHAVIOURs

app.directive("enter", function(){
	return {
		//default A
		link: function(){

		}
	}
})
or 
app.directive("enter",funtion(){
	return funtion(scope , element ,attrs){
		element.bind("mouseenter",function(){
			element.addClass(attrs.enter);
			element.removeClass("panel");
		})
	}	
})
----------
Interaction BEtween Directives
app.directive("superman",function(){
	reurn {
		restrict : "E",
		scope :{},
		controller : function($scope){
			this.ability=[];
			this.addSpeed = function(){
				ability.push("speed");
			}
		}
		link: function("enter",function(scope,element,attrs){
			...
		})
	}
})
app.directive("speed",function(){
	return {
		require:"superman"
		link: function(scope,element,attrs,superctrl){
			superctrl.addSpeed()
		}
	}
})
<superman speed></superman>
--------------
Scope
app.directive("kid",function(){
	return {
		restrict  : "E",
		scope : {
			done:"&" //expression
			treat:"@" //string (literal)
			flavor: "=" //bi directional connection
		},
		template : "<input type= "text" ng-model="chore"/>{{chore}}{{treat }} <div class="button" ng-click="done({chore:chore})">"
	}
})
<kid done="alertChore()" treat="choclate" flavor="controllerFlavor">//some controller scope function

-------------------
Transclussion
<panel>
	<div></div>
<panel>

return {
	transclude:true,
	template:.... ng-transclude on an element
}
--------------------
alterative controller
app.controller("ctrl",function($scope){
	this.getSOmething=function(){

	}

	return $scope.ctrl = this;
})
now we have to call contoller elements like
ctrl.getsomething()
--------------------





-------------------
ng-include	