Git Links
---------

https://try.github.io/levels/1/challenges/1  ----> Learn Visually

https://www.git-tower.com/learn/git/ebook/en/command-line/introduction ----> Git Book

https://www.atlassian.com/git/tutorials/

http://pcottle.github.io/learnGitBranching/ ----------> Learn Visually




Notes
--------
git init
git status
git status -p
git add

git remote add origin 

git stash
git stash pop
git stash apply stname

git log           /// commit history
git log bname
git log -p

git diff
git diff --staged
git diff master..contact-form
git diff 0023cdd..fcd6199

---------------------------

git commit 
git commit --amend -m "This is the correct message"


git branch <brname>
	-v
	-va
git checkout <brname> 
	
	git checkout -b <bn>

git merge <bn>
git rebase <bn> // the head branch will be child of BN
git rebase <pn> <cn>

git checkout hashval
git checkout HEAD^
			 HEAD~5
			 HEAD~
			 HEAD^2


git reset
get revert
git merge --abort		 	

git cherry-pick C1 C2 ..
git rebase -i HEAD~n

git branch -f bn Hash //move branches around
git branch -d bn   //delete
git branch -dr origin/bn //remote delete


git tag V0 C1
git describe branch



-------------------------------

Remote

Git clone  link.git

git fetch
git merge origin/master

	$git pull

GIT PUSH
	this wont work sometimes,due to inconsistent history
	so
	git fetch
	git merge / rebase origin/master

	else for rebase

		$git pull --rebase; git push

	else for merging

	$git pull;git push

New branch from a remote repo
	git checkout --track origin/branch

Remote tracking
1
	git checkout -b totallyNotMaster o/master

	eg:
		git checkout -b foo o/master; git pull
		instead of master foo will be tracking o/master and at pull the foo branch will be merged with fetched content.
2
	git branch -u o/master foo
	git branch -u o/master (if foo is checked)



git push <remote> <place>
git push origin master
git push -u origin branch // establish tracking
git push origin src:dest	

same to fetch
		pull	

=============================
Changes

git commit --amend -m "This is the correct message"
git checkout HEAD file/to/restore.ext
git reset --hard HEAD

git revert 2b504be  // creates a new commit undoing the last commit
git reset --hard 2be18d9
git reset --keep 2be18d9 // local change preserved

git merge --abort


=====================
sub module
	inside lib/
	git submodule add https://github.com/djyde/ToProgress

when cloning a new repo with subm,the subm wont be cloned along with it, just a reference to remote URL will be added.
WE have to manually add
	
	git clone --recurse-submodules
	inside lib
	git submodule update --init --recursive

To select a commit as working copy in the submod ////we dont checkout branches here,rather specific commits
	$ cd lib/submod/
	$ git log --oneline --decorate	
	$ git checkout 0.1.1

git submodule status

to update the revision status to that of the remote
	 git submodule update lib/ToProgress	


$ git submodule deinit lib/ToProgress
$ git rm lib/ToPogress	 
===========================

Git Flow
	git flow init
	git flow feature start rss-feed
	git flow feature help
	git flow feature finish rss-feed

	git flow release start 1.1.5
	git flow release finish 1.1.5

	git flow hotfix start missing-link